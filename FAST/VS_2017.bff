// Visual Studio 2017
//------------------------------------------------------------------------------
.VS2017_BasePath         = 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional'
.VS2017_Version          = '14.15.26726'


Compiler( 'VS_2017-Compiler-x86' )
{
    .Root       = '$VS2017_BasePath$/VC/Tools/MSVC/$VS2017_Version$/bin/Hostx64/x86'
    .Executable = '$Root$/cl.exe'
    .ExtraFiles = 
    { 
        '$Root$/c1.dll'
        '$Root$/c1xx.dll',
        '$Root$/c2.dll',
        '$Root$/../x64/msobj140.dll' // NOTE: Annoyingly not present in the same dir
        '$Root$/../x64/mspdb140.dll' // NOTE: Annoyingly not present in the same dir
        '$Root$/../x64/mspdbcore.dll'// NOTE: Annoyingly not present in the same dir
        '$Root$/../x64/mspdbsrv.exe' // NOTE: Annoyingly not present in the same dir
        '$Root$/../x64/mspft140.dll' // NOTE: Annoyingly not present in the same dir
        '$Root$/msvcp140.dll'
        '$Root$/vcruntime140.dll'
        '$Root$/1033/clui.dll'
    }
}


Compiler( 'VS_2017-Compiler-x64' )
{
    .Root       = '$VS2017_BasePath$/VC/Tools/MSVC/$VS2017_Version$/bin/Hostx64/x64'
    .Executable = '$Root$/cl.exe'
    .ExtraFiles = 
    { 
        '$Root$/c1.dll'
        '$Root$/c1xx.dll',
        '$Root$/c2.dll',
        '$Root$/msobj140.dll'
        '$Root$/mspdb140.dll'
        '$Root$/mspdbcore.dll'
        '$Root$/mspdbsrv.exe'
        '$Root$/mspft140.dll'
        '$Root$/msvcp140.dll'
        '$Root$/vcruntime140.dll'
        '$Root$/1033/clui.dll'
  }
}


.VS_2017_Base_Options =
[
    .VS_MSC_VER             = "1910"

    .VS_BasePath            = .VS2017_BasePath
    .VS_SubPath             = .VS2017_Version
    .VS_BinPath             = '$VS_BasePath$/VC/Tools/MSVC/$VS_SubPath$/bin'

    .VS_CRT_Static          = ' libcmt.lib'             // native static CRT (opt:/MT def:_MT)
                            + ' libvcruntime.lib'       // VC extended CRT   (opt:/MT def:_MT)
                            + ' libucrt.lib'            // Universal CRT     (opt:/MT def:_MT)

    .VS_CRT_Static_Debug    = ' libcmtd.lib'            // native static CRT (opt:/MT def:_MT, _DEBUG)
                            + ' libvcruntimed.lib'      // VC extended CRT   (opt:/MT def:_MT, _DEBUG)
                            + ' libucrt.lib'            // Universal CRT     (opt:/MT def:_MT, _DEBUG)

    .VS_CRT_DLL             = ' msvcrt.lib'             // native DLL CRT      (opt:/MD def:_MT,_DLL)
                            + ' vcruntime.lib'          // VC extended DLL CRT (opt:/MD def:_MT,_DLL)
                            + ' ucrt.lib'               // unversal DLL CRT    (opt:/MD def:_MT,_DLL)

    .VS_CRT_DLL_Debug       = ' msvcrtd.lib'            // native DLL CRT      (opt:/MD def:_MT,_DLL, _DEBUG)
                            + ' vcruntimed.lib'         // VC extended DLL CRT (opt:/MD def:_MT,_DLL, _DEBUG)
                            + ' ucrtd.lib'              // unversal DLL CRT    (opt:/MD def:_MT,_DLL, _DEBUG)


    .VS_IncludePaths        =' -I"$VS_BinPath$/../include/"'

    .CompilerOptions        = ' $VS_IncludePaths$'
                            + ' /Zc:inline'         // Remove unreferenced COMDATs at compile time (VS2013.2+)
                            + ' /Zc:strictStrings'  // Require const only usage of string literals (VS2013+)

    .Librarian              = '$VS_BinPath$/Hostx64/x86/lib.exe'
    .Linker                 = '$VS_BinPath$/Hostx64/x86/link.exe'
    .LinkerOptions          = ' /DEBUG:FASTLINK'        // VS2015 and later only
]


.VS_2017_X86_Options =
[
    Using( .VS_2017_Base_Options )

    .CompilerOptions    + ' /arch:SSE2'
    .VS_LinkerPaths     = ' /LIBPATH:"$VS_BinPath$/../lib/x86"'
    .LinkerOptions      + .VS_LinkerPaths
]


.VS_2017_X64_Options =
[
    Using( .VS_2017_Base_Options )

    .VS_LinkerPaths     = ' /LIBPATH:"$VS_BinPath$/../lib/x64"'
    .LinkerOptions      + .VS_LinkerPaths
]

.VS_Name            = "VS_2017"
.VS_PATH            = '$VS2017_BasePath$/Common7/IDE/;$VS2017_BasePath$/VC/Tools/MSVC/$VS2017_Version$/bin/Hostx64/x64'
.VS_PlatformToolset = "v141"

.WindowsSDK_Version = "10"
