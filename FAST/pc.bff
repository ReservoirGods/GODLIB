.ExternalPath = "C:\Program Files (x86)"
.DirectXPath="C:\Program Files (x86)\Microsoft DirectX SDK (June 2010)"
.WindowsSDK6BasePath = "C:\Program Files\Microsoft SDKs\Windows\v6.0A"
.WindowsSDK7BasePath = "C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A"

//------------------------------------------------------------------------------
// Compilers
//------------------------------------------------------------------------------

.VC9Path = 'C:\Program Files (x86)\Microsoft Visual Studio 9.0'
.VC10Path = 'C:\Program Files (x86)\Microsoft Visual Studio 10.0'

Compiler( 'Compiler-PC-x86-MSVC9' )
{
	.VSBasePath	= '$VC9Path$'
	.Root		= '$VC9Path$\VC\bin'
	.Root2		= '$VC9Path$\Common7\IDE'
	.Executable	= '$Root$\cl.exe'
	.ExtraFiles = { '$Root$\c1.dll'
					'$Root$\c1xx.dll',
					'$Root$\c2.dll',
					'$Root2$\msobj80.dll'
					'$Root2$\mspdb80.dll'
					'$Root2$\mspdbsrv.exe'
					'$Root2$\mspdbcore.dll'
					'$Root$\1033\clui.dll'
					'$VSBasePath$\VC\redist\x86\Microsoft.VC90.CRT\msvcp90.dll'
					'$VSBasePath$\VC\redist\x86\Microsoft.VC90.CRT\msvcr90.dll'
					'$VSBasePath$\VC\redist\x86\Microsoft.VC90.CRT\msvcm90.dll'
				  }
}


Compiler( 'Compiler-PC-x64-MSVC9' )
{
	.VSBasePath	= '$VC9Path$'
	.Root		= '$VC9Path$\VC\bin\amd64'
	.Executable	= '$Root$\cl.exe'
	.ExtraFiles = { '$Root$\c1.dll'
					'$Root$\c1xx.dll',
					'$Root$\c2.dll',
					'$Root$\msobj80.dll'
					'$Root$\mspdb80.dll'
					'$Root$\mspdbsrv.exe'
					'$Root$\mspdbcore.dll'
					'$Root$\1033\clui.dll'
					'$VSBasePath$\VC\redist\x86\Microsoft.VC90.CRT\msvcp90.dll'
					'$VSBasePath$\VC\redist\x86\Microsoft.VC90.CRT\msvcr90.dll'
					'$VSBasePath$\VC\redist\x86\Microsoft.VC90.CRT\msvcm90.dll'
				  }
}

Compiler( 'Compiler-PC-x86-MSVC10' )
{
	.VSBasePath	= '$VC10Path$'
	.Root		= '$VC10Path$\VC\bin'
	.Root2		= '$VC10Path$\Common7\IDE'
	.Executable	= '$Root$\cl.exe'
	.ExtraFiles = { '$Root$\c1.dll'
					'$Root$\c1ast.dll',
					'$Root$\c1xx.dll',
					'$Root$\c1xxast.dll',
					'$Root$\c2.dll',
					'$Root2$\msobj100.dll'
					'$Root2$\mspdb100.dll'
					'$Root2$\mspdbsrv.exe'
					'$Root2$\mspdbcore.dll'
					'$Root$\mspft80.dll'
					'$Root$\1033\clui.dll'
					'$VSBasePath$\VC\redist\x86\Microsoft.VC100.CRT\msvcp100.dll'
					'$VSBasePath$\VC\redist\x86\Microsoft.VC100.CRT\msvcr100.dll'
				  }
}


Compiler( 'Compiler-PC-x64-MSVC10' )
{
	.VSBasePath	= '$VC10Path$'
	.Root		= '$VC10Path$\VC\bin\amd64'
	.Executable	= '$Root$\cl.exe'
	.ExtraFiles = { '$Root$\c1.dll'
					'$Root$\c1ast.dll',
					'$Root$\c1xx.dll',
					'$Root$\c1xxast.dll',
					'$Root$\c2.dll',
					'$Root$\msobj100.dll'
					'$Root$\mspdb100.dll'
					'$Root$\mspdbsrv.exe'
					'$Root$\mspdbcore.dll'
					'$Root$\mspft80.dll'
					'$Root$\1033\clui.dll'
					'$VSBasePath$\VC\redist\x86\Microsoft.VC100.CRT\msvcp100.dll'
					'$VSBasePath$\VC\redist\x86\Microsoft.VC100.CRT\msvcr100.dll'
				  }
}


Compiler( 'Compiler-PC-x86-Clang' )
{
	.VSBasePath	= '$ExternalPath$\VISUAL_STUDIO\9.0'
	.Root		= '$VSBasePath$\..\ClangForWindows'
	.Executable	= '$Root$\clang++.exe'
}

//------------------------------------------------------------------------------
// Configurations
//------------------------------------------------------------------------------
.MSVCBaseConfig =
[
	.AdditionalWarnings		= ' /we4062' // enumerator 'identifier' in a switch of enum 'enumeration' is not handled
							+ ' /we4263' // 'function' : member function does not override any base class virtual member function
							+ ' /we4265' // 'class': class has virtual functions, but destructor is not virtual
							+ ' /we4296' // 'operator': expression is always false
							+ ' /we4555' // expression has no effect; expected expression with side-effect
							+ ' /we4619' // #pragma warning : there is no warning number 'number'
							+ ' /we4640' // 'instance' : construction of local static object is not thread-safe
							+ ' /we4826' // Conversion from 'type1 ' to 'type_2' is sign-extended. This may cause unexpected runtime behavior.
							+ ' /we4836' // nonstandard extension used : 'type' : local types or unnamed types cannot be used as template arguments
							+ ' /we4905' // wide string literal cast to 'LPSTR'
							+ ' /we4906' // string literal cast to 'LPWSTR'

.CompilerOptions    = '"%1"'           	// Input
                    + ' /c'            	// Compile only
                    + ' /EHsc'
                    + ' /ErrorReport:Prompt'
                    + ' /Fo"%2"'       	// Output
//					+ ' /FR'			// browse information
					+ ' /Gm'			// minimal rebuild
					+ ' /MDd'			// multi threaded debug DLL
                    + ' /nologo'       	// No compiler spam
					+ ' /RTC1'			// runtime checks
//					+ ' /RTCs'			// runtime checks
//					+ ' /TP'			// compile as C++ code
                    + ' /W4'           	// Warning level 4
//                    + ' /WX'           	// Warnings as errors
//                    + ' /Z7'           	// Debug format (in .obj)
					+ ' /Zp1'			// 1 byte struct alignment
					+ ' /Zi'
					+ ' /showIncludes'

//		.CompilerOptions 					
			+ ' /D "_CRT_SECURE_NO_WARNINGS"'
			+ ' /D "_DEBUG"'
			+ ' /D "D3D_DEBUG_INFO"'
			+ ' /D "DIRECTINPUT_VERSION=0x0800"'
			+ ' /D "_VC80_UPGRADE=0x0600"'
			+ ' /D "_MBCS"'
			+ ' /D "_WINDOWS"'
			+ ' /D "dAUDIO_MIXER=1"'
			+ ' /D "dCLI=1"'
			+ ' /D "dDEBUG=1"'
			+ ' /D "dDEBUGLOG=1"'
			+ ' /D "dGODLIB_CHUNKY=1"'
			+ ' /D "dGODLIB_CLOCK=1"'
			+ ' /D "dGODLIB_FADE=1"'
			+ ' /D "dGODLIB_PACKAGEMANGER=1"'
			+ ' /D "dMEMORY_GUARDx=1"'
			+ ' /D "dMEMORY_TRACKx"'
			+ ' /D "dMEMORY_GUARDx"'														
			+ ' /D "dSYSTEM_D3D=1"'


	.PCHOptions				= .CompilerOptions
							+ ' /Fp"%2" /Fo"%3"'

	.LibrarianOptions		= '/WX /NOLOGO /OUT:"%2" "%1"'
	.LinkerOptions			= '/DEBUG'
							+ ' /DYNAMICBASE:NO'
							+ ' /ERRORREPORT:PROMPT'
							+ ' /NOLOGO' 
							+ ' /IGNORE:4001' ; don't complain about linking libs only
							+ ' /INCREMENTAL:NO'
							+ ' /OUT:"%2" "%1"' 
							+ ' /SUBSYSTEM:WINDOWS'
							+ ' /WX'
							+ ' d3dx9d.lib d3d9.lib d3dxof.lib dxguid.lib dinput8.lib'
							+ ' winmm.lib odbc32.lib odbccp32.lib kernel32.lib user32.lib'
							+ ' gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib'
	// Optimizations
//	.CompilerDebug		= ' /Od /GS-'
	.CompilerDebug		= ' /Od'
	.CompilerRelease	= ' /MD /Ox /Oy /Oi /GS- /GF /GL /Gy /Gw /GR- /analyze'
	.LibrarianDebug	= ''
	.LibrarianRelease  = ' /LTCG'
	.LinkerDebug		= ''
	.LinkerRelease		= ' /LTCG /OPT:REF,ICF'

	.BaseIncludePaths		= ''
//	 ' /I"./"'
//							+ ' /I"$VSBasePath$/VC/include/"'
//							+ ' /I"$WindowsSDKBasePath$/include/um"'
//							+ ' /I"$WindowsSDKBasePath$/include/shared"'
							+ ' /I"$WindowsSDK6BasePath$/include"'
//							+ ' /I"$WindowsSDK7BasePath$\include"'
	.CompilerOptions		+ .BaseIncludePaths
	.PCHOptions				+ .BaseIncludePaths

	.WindowsLibPaths		= '$WindowsSDK6BasePath$/Lib'

	.UseExceptions			= ' /EHsc'


	// Architectures
	.CompilerX86		= ' /D "WIN32"'
						//+ ' /arch:SSE2'
	.PCHX86				= ' /D "WIN32"'
						//+ ' /arch:SSE2'						
	.LinkerX86			= ' /MACHINE:X86'
						+ ' /LIBPATH:"$WindowsLibPaths$"'
						+ ' /LIBPATH:"$DirectXPath$\Lib\x86"'
	.PlatformX86		= 'x86'

	.CompilerX64		= ' /D "WIN64"'
	.PCHX64				= ' /D "WIN64"'
	.LinkerX64			= ' /MACHINE:X64'
						+ ' /LIBPATH:"$WindowsLibPaths$/x64"'
						+ ' /LIBPATH:"$DirectXPath$\Lib\x64"'
	.PlatformX64		= 'x64'

]


.x86BaseConfig = [ Using( .MSVCBaseConfig ) .ArchitectureName='x86' .MSVCPath='x86' .LinkerOptions + .LinkerX86 .CompilerOptions + .CompilerX86 ]
.x64BaseConfig = [ Using( .MSVCBaseConfig ) .ArchitectureName='x64' .MSVCPath='x64' .LinkerOptions + .LinkerX64 .CompilerOptions + .CompilerX64 ]


.MSVC9x86Config = [ Using( .x86BaseConfig )  .CompilerName='MSVC9'  .ToolsBasePath='$VC9Path$\VC\bin' .Compiler='Compiler-PC-x86-MSVC9'  .LinkerOptions + ' /LIBPATH:"$VC9Path$\VC\lib"'       ];
.MSVC9x64Config = [ Using( .x64BaseConfig )  .CompilerName='MSVC9'  .ToolsBasePath='$VC9Path$\VC\bin' .Compiler='Compiler-PC-x64-MSVC9'  .LinkerOptions + ' /LIBPATH:"$VC9Path$\VC\lib\amd64"' ];

.MSVC10x86Config = [ Using( .x86BaseConfig )  .CompilerName='MSVC10'  .ToolsBasePath='$VC10Path$\VC\bin' .Compiler='Compiler-PC-x86-MSVC10'  .LinkerOptions + ' /LIBPATH:"$VC10Path$\VC\lib"'       ];
.MSVC10x64Config = [ Using( .x64BaseConfig )  .CompilerName='MSVC10'  .ToolsBasePath='$VC10Path$\VC\bin' .Compiler='Compiler-PC-x64-MSVC10'  .LinkerOptions + ' /LIBPATH:"$VC10Path$\VC\lib\amd64"' ];


.MSVC9x86DebugConfig  = [ Using( .MSVC9x86Config )  .ConfigName='Debug'   .CompilerOptions + .CompilerDebug   .PCHOptions + .CompilerDebug   .LibrarianOptions + .LibrarianDebug   .LinkerOptions + .LinkerDebug ]
.MSVC9x64DebugConfig  = [ Using( .MSVC9x64Config )  .ConfigName='Debug'   .CompilerOptions + .CompilerDebug   .PCHOptions + .CompilerDebug   .LibrarianOptions + .LibrarianDebug   .LinkerOptions + .LinkerDebug ]
.MSVC10x86DebugConfig = [ Using( .MSVC10x86Config ) .ConfigName='Debug'   .CompilerOptions + .CompilerDebug   .PCHOptions + .CompilerDebug   .LibrarianOptions + .LibrarianDebug   .LinkerOptions + .LinkerDebug ]
.MSVC10x64DebugConfig = [ Using( .MSVC10x64Config ) .ConfigName='Debug'   .CompilerOptions + .CompilerDebug   .PCHOptions + .CompilerDebug   .LibrarianOptions + .LibrarianDebug   .LinkerOptions + .LinkerDebug ]

.MSVC9x86ProfileConfig  = [ Using( .MSVC9x86Config )  .ConfigName='Profile' .CompilerOptions + .CompilerRelease .PCHOptions + .CompilerRelease .LibrarianOptions + .LibrarianRelease .LinkerOptions + .LinkerRelease ]
.MSVC9x64ProfileConfig  = [ Using( .MSVC9x64Config )  .ConfigName='Profile' .CompilerOptions + .CompilerRelease .PCHOptions + .CompilerRelease .LibrarianOptions + .LibrarianRelease .LinkerOptions + .LinkerRelease ]
.MSVC10x86ProfileConfig = [ Using( .MSVC10x86Config ) .ConfigName='Profile' .CompilerOptions + .CompilerRelease .PCHOptions + .CompilerRelease .LibrarianOptions + .LibrarianRelease .LinkerOptions + .LinkerRelease ]
.MSVC10x64ProfileConfig = [ Using( .MSVC10x64Config ) .ConfigName='Profile' .CompilerOptions + .CompilerRelease .PCHOptions + .CompilerRelease .LibrarianOptions + .LibrarianRelease .LinkerOptions + .LinkerRelease ]

.MSVC9x86ReleaseConfig  = [ Using( .MSVC9x86Config )  .ConfigName='Release' .CompilerOptions + .CompilerRelease .PCHOptions + .CompilerRelease .LibrarianOptions + .LibrarianRelease .LinkerOptions + .LinkerRelease ]
.MSVC9x64ReleaseConfig  = [ Using( .MSVC9x64Config )  .ConfigName='Release' .CompilerOptions + .CompilerRelease .PCHOptions + .CompilerRelease .LibrarianOptions + .LibrarianRelease .LinkerOptions + .LinkerRelease ]
.MSVC10x86ReleaseConfig = [ Using( .MSVC10x86Config ) .ConfigName='Release' .CompilerOptions + .CompilerRelease .PCHOptions + .CompilerRelease .LibrarianOptions + .LibrarianRelease .LinkerOptions + .LinkerRelease ]
.MSVC10x64ReleaseConfig = [ Using( .MSVC10x64Config ) .ConfigName='Release' .CompilerOptions + .CompilerRelease .PCHOptions + .CompilerRelease .LibrarianOptions + .LibrarianRelease .LinkerOptions + .LinkerRelease ]

.ArchitectureCompilerConfigList = 
{ 
	.MSVC9x86DebugConfig,   .MSVC9x64DebugConfig,   .MSVC10x86DebugConfig,   .MSVC10x64DebugConfig,
	.MSVC9x86ProfileConfig, .MSVC9x64ProfileConfig, .MSVC10x86ProfileConfig, .MSVC10x64ProfileConfig,
	.MSVC9x86ReleaseConfig, .MSVC9x64ReleaseConfig, .MSVC10x86ReleaseConfig, .MSVC10x64ReleaseConfig
}




// X86 Clang
//------------------------------------------------------------------------------
.X86ClangConfig = 
[
//	.ToolsBasePath			= '$ClangBasePath$'
	.Compiler				= 'Compiler-x86Clang'
//	.Librarian				= '$ToolsBasePath$\llvm-ar.exe'
//	.Linker					= '$VSBasePath$\VC\bin\link.exe' //'$ToolsBasePath$\lld.exe'								

	.WindowsLibPaths		= '$WindowsSDK6BasePath$/include'

	.CompilerOptions		= '-o"%2" "%1" -c -g'
							+ ' -I"./"'
//							+ ' -I"$VSBasePath$/VC/include/"'
							+ ' -I"$WindowsSDK6BasePath$/include"'
							+ ' -D"WIN32_LEAN_AND_MEAN" -D_WIN32 -D__WINDOWS__'
							+ ' -DWIN32 -D_WIN32'
							+ ' -DRELEASE'
							+ ' -D"_X86_=1" -D_M_IX86'
							+ ' -D"_INTEGRAL_MAX_BITS=64"'
							+ ' -D"_MSC_VER=1500"'

							// MS compatibility
							+ ' -fms-compatibility'
							+ ' -fms-extensions'
							+ ' -fmsc-version=1700'
							+ ' -mms-bitfields'
							+ ' -Wno-microsoft' // suppress "enumerator value is not representable in the underlying type 'int' [-Wmicrosoft]'"
							+ ' -Wno-#pragma-messages'

							+ ' -Werror'					// warnings as errors
							+ ' -fno-exceptions'
							+ ' -fno-rtti'
							+ ' -Wno-ignored-attributes' // ignore 'restrict, noalias' keyword
							+ ' -Wno-c++11-extensions'
							+ ' -Wno-c++11-long-long' // don't want about use of "long long"
							+ ' -Wno-deprecated-declarations'
							+ ' -Wno-unused-value' // TODO: Need to re-enable this
							+ ' -integrated-as' // use the built-in assembler (don't try to use gcc)

							+ ' -fdata-sections'
							+ ' -ffunction-sections'

	.PCHOptions				= .CompilerOptions // TODO: Configure this properly

	.LibrarianOptions		= 'rc "%2" "%1"' // NOTE: output must come first
	.LinkerOptions			= '/NODEFAULTLIB /WX /NOLOGO /INCREMENTAL:NO /OUT:"%2" "%1" /DEBUG'
							+ ' /IGNORE:4001' ; don't complain about linking libs only
//							+ ' /LIBPATH:"$WindowsLibPaths$/x86" /LIBPATH:"$VSBasePath$/VC/lib"'
							+ ' /MACHINE:X86'

	.Platform				= 'x86Clang'
	.Config					= 'Debug'

	.UseExceptions			= ' -fexceptions'
]



// Resource Compiler
//------------------------------------------------------------------------------
.ResourceCompiler =
[
	.Compiler					= '$WindowsSDK6BasePath$\Bin\x86\RC.exe'
	.CompilerOutputExtension	= '.res'
	.CompilerOptions			= '/nologo /fo"%2" %1'
]
